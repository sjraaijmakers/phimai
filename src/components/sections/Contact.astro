---
import { siteConfig } from '../../config/site';
import { Mail } from 'lucide-astro';
import { useTranslations, getLangFromUrl } from '../../i18n/ui';

// Get i18n translations
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section id="contact" class="contact section">
  <div class="container">
    <div class="contact-content">
      <div class="contact-info">
        <h2 data-i18n-key="contact.title">{t('contact.title')}</h2>
        <p data-i18n-key="contact.description">{t('contact.description')}</p>

        <div class="contact-methods">
          <div class="contact-method">
            <div class="contact-icon">
              <Mail size={24} />
            </div>
            <div class="contact-details">
              <h4 data-i18n-key="contact.email.label">{t('contact.email.label')}</h4>
              <a href={`mailto:${siteConfig.email}`}>{siteConfig.email}</a>
            </div>
          </div>

          <div class="contact-method messaging-method">
            <div class="contact-icon">
              <svg width="24" height="24" viewBox="0 0 24 24" fill="currentColor">
                <path d="M20 2H4c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h4l4 4 4-4h4c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-2 12H6v-2h12v2zm0-3H6V9h12v2zm0-3H6V6h12v2z"/>
              </svg>
            </div>
            <div class="contact-details">
              <div class="messaging-buttons">
                <!-- Official WhatsApp Click to Chat Button -->
                <a 
                  href={`https://wa.me/${siteConfig.phone.replace(/\D/g, '')}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="whatsapp-official-btn"
                >
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M17.472 14.382c-.297-.149-1.758-.867-2.03-.967-.273-.099-.471-.148-.67.15-.197.297-.767.966-.94 1.164-.173.199-.347.223-.644.075-.297-.15-1.255-.463-2.39-1.475-.883-.788-1.48-1.761-1.653-2.059-.173-.297-.018-.458.13-.606.134-.133.298-.347.446-.52.149-.174.198-.298.298-.497.099-.198.05-.371-.025-.52-.075-.149-.669-1.612-.916-2.207-.242-.579-.487-.5-.669-.51-.173-.008-.371-.01-.57-.01-.198 0-.52.074-.792.372-.272.297-1.04 1.016-1.04 2.479 0 1.462 1.065 2.875 1.213 3.074.149.198 2.096 3.2 5.077 4.487.709.306 1.262.489 1.694.625.712.227 1.36.195 1.871.118.571-.085 1.758-.719 2.006-1.413.248-.694.248-1.289.173-1.413-.074-.124-.272-.198-.57-.347m-5.421 7.403h-.004a9.87 9.87 0 01-5.031-1.378l-.361-.214-3.741.982.998-3.648-.235-.374a9.86 9.86 0 01-1.51-5.26c.001-5.45 4.436-9.884 9.888-9.884 2.64 0 5.122 1.03 6.988 2.898a9.825 9.825 0 012.893 6.994c-.003 5.45-4.437 9.884-9.885 9.884m8.413-18.297A11.815 11.815 0 0012.05 0C5.495 0 .16 5.335.157 11.892c0 2.096.547 4.142 1.588 5.945L.057 24l6.305-1.654a11.882 11.882 0 005.683 1.448h.005c6.554 0 11.89-5.335 11.893-11.893A11.821 11.821 0 0020.885 3.488"/>
                  </svg>
                  <span data-i18n-key="contact.whatsapp.label">{t('contact.whatsapp.label')}</span>
                </a>

                <a 
                  href={`https://line.me/ti/p/~${siteConfig.lineId}`}
                  target="_blank"
                  rel="noopener noreferrer"
                  class="line-official-btn"
                >
                  <svg width="20" height="20" viewBox="0 0 24 24" fill="currentColor">
                    <path d="M19.365 9.863c.349 0 .63.285.63.631 0 .345-.281.63-.63.63H17.61v1.125h1.755c.349 0 .63.283.63.63 0 .344-.281.629-.63.629h-2.386c-.345 0-.627-.285-.627-.629V8.108c0-.345.282-.63.63-.63h2.386c.346 0 .627.285.627.63 0 .349-.281.63-.63.63H17.61v1.125h1.755zm-3.855 3.016c0 .27-.174.51-.432.596-.064.021-.133.031-.199.031-.211 0-.391-.09-.51-.25l-2.443-3.317v2.94c0 .344-.279.629-.631.629-.346 0-.626-.285-.626-.629V8.108c0-.27.173-.51.43-.595.06-.023.136-.033.194-.033.195 0 .375.104.495.254l2.462 3.33V8.108c0-.345.282-.63.63-.63.345 0 .63.285.63.63v4.771zm-5.741 0c0 .344-.282.629-.631.629-.345 0-.627-.285-.627-.629V8.108c0-.345.282-.63.63-.63.346 0 .628.285.628.63v4.771zm-2.466.629H4.917c-.345 0-.63-.285-.63-.629V8.108c0-.345.285-.63.63-.63.348 0 .63.285.63.63v4.141h1.756c.348 0 .629.283.629.63 0 .344-.282.629-.629.629M24 10.314C24 4.943 18.615.572 12 .572S0 4.943 0 10.314c0 4.811 4.27 8.842 10.035 9.608.391.082.923.258 1.058.59.12.301.079.766.038 1.08l-.164 1.02c-.045.301-.24 1.186 1.049.645 1.291-.539 6.916-4.078 9.436-6.975C23.176 14.393 24 12.458 24 10.314"/>
                  </svg>
                  <span data-i18n-key="contact.line.label">{t('contact.line.label')}</span>
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="contact-form-container">
        <form class="contact-form" id="contactForm">
          <h3 data-i18n-key="contact.form.title">{t('contact.form.title')}</h3>
          
          <div class="form-group">
            <label for="name" data-i18n-key="contact.form.name">{t('contact.form.name')}</label>
            <input type="text" id="name" name="name" required>
          </div>

          <div class="form-group">
            <label for="email" data-i18n-key="contact.form.email">{t('contact.form.email')}</label>
            <input type="email" id="email" name="email" required>
          </div>

          <div class="form-group">
            <label for="message" data-i18n-key="contact.form.message">{t('contact.form.message')}</label>
            <textarea id="message" name="message" rows="5" minlength="10" maxlength="1000" required style="resize: vertical;" />
          </div>

          <button type="submit" class="btn btn-primary" data-i18n-key="contact.form.submit">{t('contact.form.submit')}</button>
        </form>
      </div>
    </div>
  </div>
</section>

<script>
  // Contact form handling
  document.addEventListener('DOMContentLoaded', () => {
    const contactForm = document.getElementById('contactForm');
    const endpoint = "${siteConfig.contactEndpoint}";

    if (!contactForm) return;

    contactForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      const form = e.currentTarget;
      const name = (document.getElementById('name') as HTMLInputElement)?.value.trim();
      const email = (document.getElementById('email') as HTMLInputElement)?.value.trim();
      const message = (document.getElementById('message') as HTMLTextAreaElement)?.value.trim();

      if (!name || !email || !message) {
        alert('Please fill in your name, email and message.');
        return;
      }

      if (!endpoint) {
        alert('Contact form endpoint is not configured. Please set siteConfig.contactEndpoint.');
        return;
      }

      try {
        const res = await fetch(endpoint, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ name, email, message, source: window.location.href })
        });

        if (!res.ok) throw new Error('Network response was not ok');
        alert('Thanks! Your message has been sent.');
        (form as HTMLFormElement).reset();
      } catch (err) {
        console.error(err);
        alert('Sorry, something went wrong. Please email us directly at ${siteConfig.email}.');
      }
    });
  });
</script>

