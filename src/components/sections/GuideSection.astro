---
import Carousel from '../ui/Carousel.astro';
import Lightbox from '../ui/Lightbox.astro';
import type { ImageConfig } from '../../data/images';

interface Props {
  title: string;
  images: ImageConfig[];
  mapSrc: string;
  sectionNumber: number;
  description?: string;
  openingTimes?: string;
  openingTimesLabel?: string;
}

const { title, images, mapSrc, sectionNumber, description, openingTimes, openingTimesLabel } = Astro.props;

// Generate IDs internally using section number
const carouselId = `carousel-${sectionNumber}`;
const lightboxId = `lightbox-${sectionNumber}`;
---

<div class="guide-section">
  <div class="section-content">
    <div class="section-text">
      <h2 class="section-title">
        <span class="section-number">{sectionNumber || '?'}</span>
        <span>{title}</span>
      </h2>
      {description && <p class="section-description">{description}</p>}
      {openingTimes && (
        <div class="opening-times">
          <span class="opening-label">{openingTimesLabel}</span>
          <span class="opening-text">{openingTimes}</span>
        </div>
      )}
    </div>

    <div class="section-media">
      <div class="section-carousel image-hover-zoom">
        <Carousel
          id={carouselId}
          images={images}
          interval={4000}
          showArrows={true}
          showDots={true}
          autoPlay={true}
          lightboxId={lightboxId}
        />
      </div>
      <div class="section-map">
        <iframe
          class="spot-map"
          src={mapSrc}
          allowfullscreen=""
          loading="lazy"
          referrerpolicy="no-referrer-when-downgrade"
        >
        </iframe>
      </div>
    </div>
  </div>

  <!-- Lightbox for this section -->
  <Lightbox id={lightboxId} images={images} />
</div>

<style>
  .guide-section {
    position: relative;
    background: var(--color-white);
  }

  /* Override the global brown background gradient for guide sections */
  .guide-section::before {
    display: none;
  }

  .guide-section:not(:last-child)::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 50%;
    transform: translateX(-50%);
    width: 80%;
    max-width: 600px;
    height: 1px;
    background: linear-gradient(
      90deg,
      transparent,
      var(--color-border),
      transparent
    );
  }

  @media (max-width: 768px) {
    .guide-section:not(:last-child)::after {
      width: 90%;
      max-width: none;
    }
  }

  .guide-section:last-child {
    margin-bottom: 0;
  }

  .section-content {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: var(--space-3xl);
    align-items: center;
  }

  @media (max-width: 1024px) {
    .section-content {
      grid-template-columns: 1fr;
      gap: var(--space-xl);
    }
  }

  .section-text {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    height: 100%;
    gap: var(--space);
  }

  .section-title {
    font-size: clamp(1.1rem, 2.5vw, 1.4rem);
    font-weight: 500;
    color: var(--color-primary);
    margin: 0;
    line-height: 1.5;
    position: relative;
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    font-style: italic;
  }

  .section-number {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 1.5rem;
    height: 1.5rem;
    background: var(--color-accent);
    color: white;
    border-radius: 50%;
    font-size: 0.7rem;
    font-weight: 600;
    flex-shrink: 0;
    box-shadow: var(--shadow-sm);
    min-width: 1.5rem;
    min-height: 1.5rem;
    margin-right: var(--space-sm);
    opacity: 0.9;
  }

  .section-description {
    color: var(--color-text);
    line-height: 1.6;
    margin: 0;
    font-size: 0.95rem;
  }

  .opening-times {
    display: flex;
    align-items: center;
    gap: var(--space-xs);
    font-size: 0.9rem;
  }

  .opening-label {
    color: var(--color-text-light);
    font-weight: 500;
  }

  .opening-text {
    color: var(--color-primary);
    font-weight: 500;
  }

  .section-media {
    display: grid;
    grid-template-columns: 1fr 1fr;
    gap: var(--space-2xl);
    align-items: start;
  }

  @media (max-width: 768px) {
    .section-media {
      grid-template-columns: 1fr;
      gap: var(--space-lg);
    }
  }

  .section-carousel {
    border-radius: var(--radius);
    overflow: visible;
    box-shadow: var(--shadow-md);
    position: relative;
    aspect-ratio: 4/3;
    border: 1px solid rgba(139, 115, 85, 0.1);
  }

  .section-carousel .carousel {
    height: 100%;
    overflow: hidden;
  }

  .section-carousel .carousel-slide img {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  /* Ensure carousel controls are visible */
  .section-carousel .carousel-arrow,
  .section-carousel .carousel-dots {
    z-index: 30;
  }

  .section-map {
    border-radius: var(--radius);
    overflow: hidden;
    box-shadow: var(--shadow-md);
    position: relative;
    aspect-ratio: 4/3;
    border: 1px solid rgba(139, 115, 85, 0.1);
  }

  .spot-map {
    width: 100%;
    height: 100%;
    border: none;
    display: block; /* Prevent baseline whitespace under inline iframes */
  }
</style>
