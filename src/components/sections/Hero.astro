---
// This should work with astro-i18next integration
const { t } = await import('i18next');

// Hero images for carousel
const heroImages = [
  '/images/hero-tiny-home.jpg',
  '/images/bedroom-cozy.jpg',
  '/images/exterior-cozy.jpg',
  '/images/garden-view.jpg',
  '/images/kitchen-cozy.jpg'
];
---

<section id="hero" class="hero">
  <div class="hero-background">
    <div class="carousel">
      {heroImages.map((image, index) => (
        <div class={`carousel-slide ${index === 0 ? 'active' : ''}`}>
          <img src={image} alt="Phimai Pond House" class="hero-image">
        </div>
      ))}
    </div>
    <div class="hero-overlay"></div>
  </div>
  
  <div class="hero-content">
    <div class="container">
      <h1 class="hero-title">{t('hero.title')}</h1>
      <p class="hero-subtitle">{t('hero.subtitle')}</p>
      
      <div class="hero-buttons">
        <a href="#booking" class="btn btn-primary">{t('hero.bookNow')}</a>
        <a href="#gallery" class="btn btn-secondary">{t('hero.viewGallery')}</a>
      </div>
    </div>
  </div>

  <!-- Carousel Navigation -->
  <div class="carousel-nav">
    {heroImages.map((_, index) => (
      <button 
        class={`carousel-dot ${index === 0 ? 'active' : ''}`}
        data-slide={index}
        aria-label={`Go to slide ${index + 1}`}
      ></button>
    ))}
  </div>
</section>

<script>
  // Carousel functionality
  document.addEventListener('DOMContentLoaded', () => {
    const carousel = document.querySelector('.carousel');
    const slides = document.querySelectorAll('.carousel-slide');
    const dots = document.querySelectorAll('.carousel-dot');
    let currentSlide = 0;
    let interval;

    function showSlide(index) {
      // Remove active class from all slides and dots
      slides.forEach(slide => slide.classList.remove('active'));
      dots.forEach(dot => dot.classList.remove('active'));
      
      // Add active class to current slide and dot
      slides[index].classList.add('active');
      dots[index].classList.add('active');
      
      currentSlide = index;
    }

    function nextSlide() {
      const next = (currentSlide + 1) % slides.length;
      showSlide(next);
    }

    function startAutoPlay() {
      interval = setInterval(nextSlide, 5000); // Change slide every 5 seconds
    }

    function stopAutoPlay() {
      clearInterval(interval);
    }

    // Add click handlers to dots
    dots.forEach((dot, index) => {
      dot.addEventListener('click', () => {
        showSlide(index);
        stopAutoPlay();
        startAutoPlay(); // Restart autoplay
      });
    });

    // Pause autoplay on hover
    carousel?.addEventListener('mouseenter', stopAutoPlay);
    carousel?.addEventListener('mouseleave', startAutoPlay);

    // Start autoplay
    startAutoPlay();
  });
</script>

<style>
  /* ===== HERO ===== */
  .hero {
    position: relative;
    /* Full height */
    height: 100vh;
    /* Better on iOS 15+/Safari/Chrome */
    padding-top: var(--header-height);
    padding-bottom: env(safe-area-inset-bottom, 0px);
    display: flex;
    align-items: center;
    justify-content: center;
    overflow: hidden;
  }

  /* Prefer static viewport height if supported (stable layout) */
  @supports (height: 100svh) {
    .hero { 
      min-height: calc(100svh - var(--header-height)); 
    }
  }

  /* Prefer dynamic viewport height to account for browser chrome */
  @supports (height: 100dvh) {
    .hero { 
      min-height: calc(100dvh - var(--header-height)); 
    }
  }

  .hero-background {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1;
  }

  .carousel {
    width: 100%;
    height: 100%;
    position: relative;
  }

  .carousel-slide {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity 1s ease-in-out;
  }

  .carousel-slide.active {
    opacity: 1;
  }

  .carousel-slide img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    object-position: center;
  }

  .hero-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      135deg,
      rgba(0, 0, 0, 0.6) 0%,
      rgba(0, 0, 0, 0.4) 30%,
      rgba(0, 0, 0, 0.3) 70%,
      rgba(0, 0, 0, 0.5) 100%
    );
    z-index: 2;
    pointer-events: none;
  }

  .hero-content {
    text-align: center;
    width: 100%;
    max-width: none;
    margin: 0 auto;
    padding: var(--space-2xl);
    animation: fadeIn 1s ease-out;
    position: relative;
    z-index: 3;
  }

  .hero-title {
    font-size: clamp(3.5rem, 10vw, 6rem);
    margin-bottom: var(--space);
    color: var(--color-white);
    text-shadow: 
      0 2px 4px rgba(0, 0, 0, 0.4),
      0 4px 8px rgba(0, 0, 0, 0.3);
    font-weight: 800;
    letter-spacing: -0.03em;
    line-height: 1;
  }

  .hero-subtitle {
    font-size: clamp(1rem, 3vw, 1.2rem);
    color: var(--color-white);
    margin-bottom: var(--space-xl);
    font-weight: 300;
    text-shadow: 
      0 1px 2px rgba(0, 0, 0, 0.5),
      0 2px 4px rgba(0, 0, 0, 0.4);
    opacity: 0.8;
    max-width: none;
    margin-left: auto;
    margin-right: auto;
  }

  .hero-buttons {
    display: flex;
    gap: var(--space);
    justify-content: center;
    flex-wrap: wrap;
  }

  .hero-buttons .btn { 
    min-width: 140px;
    border: 1px solid rgba(255, 255, 255, 0.2);
    box-shadow: 
      0 4px 16px rgba(0, 0, 0, 0.2),
      0 2px 8px rgba(0, 0, 0, 0.1);
  }

  .hero-buttons .btn::before {
    display: none;
  }

  .hero-buttons .btn-primary {
    background: rgba(255, 255, 255, 0.95);
    color: var(--color-text);
    font-weight: 600;
  }

  .hero-buttons .btn-secondary {
    background: rgba(255, 255, 255, 0.15);
    color: var(--color-white);
    border-color: rgba(255, 255, 255, 0.3);
  }

  .hero-buttons .btn-secondary:hover {
    background: rgba(255, 255, 255, 0.25);
    color: var(--color-white);
  }

  /* ===== CAROUSEL NAVIGATION ===== */
  .carousel-nav {
    position: absolute;
    bottom: var(--space-xl);
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    gap: var(--space-sm);
    z-index: 4;
  }

  .carousel-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    border: 2px solid rgba(255, 255, 255, 0.5);
    background: transparent;
    cursor: pointer;
    transition: all 0.3s ease;
  }

  .carousel-dot:hover {
    background: rgba(255, 255, 255, 0.3);
    border-color: rgba(255, 255, 255, 0.7);
  }

  .carousel-dot.active {
    background: var(--color-white);
    border-color: var(--color-white);
  }

  /* ===== RESPONSIVE DESIGN ===== */
  @media (max-width: 768px) {
    .hero { 
      min-height: 100vh; 
    }
    .hero-content {
      padding: var(--space-lg);
      margin: var(--space);
    }
    .hero-title { 
      font-size: clamp(2rem, 8vw, 2.5rem);
      text-shadow: 
        0 2px 4px rgba(0, 0, 0, 0.4),
        0 4px 8px rgba(0, 0, 0, 0.3);
    }
    .hero-subtitle { 
      font-size: clamp(1rem, 4vw, 1.1rem);
      text-shadow: 
        0 1px 2px rgba(0, 0, 0, 0.5),
        0 2px 4px rgba(0, 0, 0, 0.4);
    }
    .hero-buttons {
      flex-direction: column;
      align-items: center;
    }
    .hero-buttons .btn {
      width: 100%;
      max-width: 280px;
    }
    .carousel-nav {
      bottom: var(--space-lg);
    }
  }

  @media (max-width: 480px) {
    .hero-title { 
      font-size: clamp(1.8rem, 10vw, 2rem);
      text-shadow: 
        0 2px 4px rgba(0, 0, 0, 0.5),
        0 4px 8px rgba(0, 0, 0, 0.4);
    }
    .hero-subtitle { 
      font-size: clamp(0.9rem, 5vw, 1rem);
      text-shadow: 
        0 1px 2px rgba(0, 0, 0, 0.6),
        0 2px 4px rgba(0, 0, 0, 0.5);
    }
    .carousel-dot {
      width: 10px;
      height: 10px;
    }
  }
</style>

