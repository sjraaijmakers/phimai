---
import { t } from 'i18next';
import { galleryImages } from '../../data/images';
import Lightbox from '../ui/Lightbox.astro';
import { Image } from 'astro:assets';
---

<div>
  <section id="gallery" class="gallery section">
    <div class="container">
      <div class="gallery-content">
        <div class="section-header">
          <h2 class="section-title">{t('gallery.title')}</h2>
          <p class="section-subtitle">{t('gallery.subtitle')}</p>
        </div>

        <div class="gallery-grid">
          {
            galleryImages.map((image, index) => (
              <div
                class="gallery-item"
                data-index={index}
                data-lightbox-id="gallery-lightbox"
              >
                <Image
                  src={image.src}
                  alt={image.captionKey ? t(image.captionKey) : ''}
                  width={400}
                  height={300}
                  format="webp"
                  quality={80}
                />
              </div>
            ))
          }
        </div>
      </div>
    </div>
  </section>

  <Lightbox id="gallery-lightbox" images={galleryImages} />

  <script>
    // Gallery lightbox functionality
    document.addEventListener('DOMContentLoaded', () => {
      console.log('Gallery script loaded');
      const galleryItems = document.querySelectorAll('.gallery-item');
      console.log('Found gallery items:', galleryItems.length);

      galleryItems.forEach((item, index) => {
        item.addEventListener('click', e => {
          console.log('Gallery item clicked:', index);
          const target = e.currentTarget as HTMLElement;
          const lightboxId = target.dataset.lightboxId;
          const imageIndex = parseInt(target.dataset.index || '0');

          console.log('Lightbox data:', {
            lightboxId,
            imageIndex,
            openLightbox: !!window.openLightbox,
          });

          if (lightboxId && window.openLightbox) {
            window.openLightbox(imageIndex, lightboxId);
          } else {
            console.error('Lightbox not available:', {
              lightboxId,
              openLightbox: !!window.openLightbox,
            });
          }
        });
      });
    });
  </script>
</div>

<style>
  /* ===== GALLERY ===== */
  .gallery {
    position: relative;
    overflow: hidden;
    background-color: rgba(139, 115, 85, 0.08);
  }

  .gallery::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(139, 115, 85, 0.02);
    -webkit-mask-image: url('/src/assets/banyan-vines-thick.png');
    -webkit-mask-repeat: repeat;
    -webkit-mask-size: 150px 150px;
    mask-image: url('/src/assets/banyan-vines-thick.png');
    mask-repeat: repeat;
    mask-size: 150px 150px;
    pointer-events: none;
    z-index: 1;
  }

  /* Also apply to the section that contains gallery */
  .section[id='gallery'] {
    position: relative;
    overflow: hidden;
    background-color: rgba(139, 115, 85, 0.08);
  }

  .section[id='gallery']::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: rgba(139, 115, 85, 0.08);
    -webkit-mask-image: url('/src/assets/banyan-vines-thick.png');
    -webkit-mask-repeat: repeat;
    -webkit-mask-size: 150px 150px;
    mask-image: url('/src/assets/banyan-vines-thick.png');
    mask-repeat: repeat;
    mask-size: 150px 150px;
    pointer-events: none;
    z-index: 1;
  }

  .gallery-grid {
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    gap: var(--space-lg);
    margin-bottom: var(--space-3xl);
    position: relative;
    z-index: 2;
    padding: 0 var(--space-sm);
    /* Ensure grid items stay within bounds */
    width: 100%;
    max-width: 100%;
    overflow: hidden;
  }

  .gallery-item {
    position: relative;
    overflow: hidden;
    border-radius: var(--radius-lg);
    cursor: pointer;
    transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
    aspect-ratio: 4/3;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
    border: 2px solid rgba(255, 255, 255, 0.9);
    background: var(--color-white);
    /* Ensure the item stays within its grid cell */
    width: 100%;
    height: 100%;
    min-width: 0;
    min-height: 0;
  }

  .gallery-item:hover {
    transform: translateY(-8px) scale(1.02);
    box-shadow: 0 12px 40px rgba(0, 0, 0, 0.15);
    border-color: var(--color-primary);
  }

  .gallery-item img {
    width: 100%;
    height: 100%;
    object-fit: cover;
    transition: transform 0.5s cubic-bezier(0.4, 0, 0.2, 1);
    /* Ensure image stays within container */
    max-width: 100%;
    max-height: 100%;
    display: block;
  }

  .gallery-item:hover img {
    transform: scale(1.08);
  }

  /* Add subtle overlay on hover */
  .gallery-item::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(135deg, rgba(139, 115, 85, 0.1), transparent);
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 1;
    pointer-events: none;
  }

  .gallery-item:hover::before {
    opacity: 1;
  }

  .gallery-more {
    text-align: center;
    margin-top: var(--space-2xl);
  }

  .gallery-more .btn {
    padding: var(--space) var(--space-2xl);
    font-size: 1.1rem;
    font-weight: 500;
  }

  .gallery-more .btn-secondary {
    background: var(--color-primary);
    color: var(--color-white);
    border: 1px solid var(--color-primary);
  }

  .gallery-more .btn-secondary:hover {
    background: var(--color-secondary);
    border-color: var(--color-secondary);
  }

  /* ===== RESPONSIVE DESIGN ===== */

  /* Large desktop */
  @media (max-width: var(--breakpoint-lg)) {
    .gallery-grid {
      grid-template-columns: repeat(4, 1fr);
      gap: var(--space-md);
      padding: 0 var(--space-sm);
    }
  }

  /* Tablet and smaller desktop */
  @media (max-width: var(--breakpoint-md)) {
    .gallery-grid {
      grid-template-columns: repeat(3, 1fr);
      gap: var(--space-md);
      padding: 0 var(--space-sm);
    }
  }

  /* Mobile landscape and small tablets */
  @media (max-width: var(--breakpoint-sm)) {
    .gallery-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: var(--space-md);
      padding: 0 var(--space-sm);
    }

    .gallery-item {
      aspect-ratio: 4/3;
      min-height: 200px;
    }
  }

  /* Mobile portrait */
  @media (max-width: var(--breakpoint-xs)) {
    .gallery-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: var(--space-sm);
      padding: 0 var(--space-xs);
    }

    .gallery-item {
      aspect-ratio: 4/3;
      min-height: 180px;
    }
  }

  /* Very small mobile screens */
  @media (max-width: 360px) {
    .gallery-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: var(--space-xs);
      padding: 0 var(--space-xs);
    }

    .gallery-item {
      aspect-ratio: 4/3;
      min-height: 160px;
    }
  }

  /* Extra small screens - ensure minimum spacing */
  @media (max-width: 320px) {
    .gallery-grid {
      grid-template-columns: repeat(2, 1fr);
      gap: var(--space-xs);
      padding: 0 var(--space-xs);
    }

    .gallery-item {
      aspect-ratio: 4/3;
      min-height: 140px;
    }
  }
</style>
