---
import { galleryImages as rawGalleryImages } from '../data/images';
import Lightbox from './Lightbox.astro';

// Convert to the format expected by the lightbox
const galleryImages = rawGalleryImages.map(img => ({
  src: `/images/${img.filename}`,
  alt: img.alt,
  description: img.description || ''
}));

const maxImages = 5;
---

<section id="gallery" class="properties section">
  <div class="container">
    <div class="properties-content">
      <div class="section-header">
        <h2 class="section-title" data-i18n="gallery.title" />
        <p class="section-subtitle" data-i18n="gallery.subtitle" />
      </div>

      <div class="gallery-grid">
        {galleryImages.slice(0, maxImages).map((image, index) => (
          <div class={`gallery-item ${index === 0 ? 'featured' : ''}`} data-index={index}>
            <img src={image.src} alt={image.alt} />
          </div>
        ))}
      </div>
      
      {galleryImages.length > maxImages && (
        <div class="gallery-more">
          <button class="btn btn-secondary" onclick="openLightbox(0)">
            <span data-i18n="gallery.showMore" />
          </button>
        </div>
      )}
    </div>
  </div>
</section>

<Lightbox images={galleryImages} />

<script define:vars={{ galleryImages, maxImages }}>
  // Gallery functionality
  document.addEventListener('DOMContentLoaded', () => {
    // Gallery click handlers
    const galleryItems = document.querySelectorAll('.gallery-item');
    galleryItems.forEach((item, index) => {
      item.addEventListener('click', () => {
        if (typeof window.openLightbox === 'function') {
          window.openLightbox(index);
        }
      });
    });
  });
</script>

