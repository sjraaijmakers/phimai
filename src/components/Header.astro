---
import { LanguageSelector } from 'astro-i18next/components';
import { Menu, X } from 'lucide-astro';
import Navigation from './Navigation.astro';

export interface Props {
  hideNavigation?: boolean;
}

const { hideNavigation = true } = Astro.props;
---

<header class="header" id="header">
  <div class="container">
    <div class="header-content">
      <!-- Left column: Logo -->
      <div class="header-left">
        <div class="logo">
          <a href="/" class="logo-link">Phimai Pond House</a>
        </div>
      </div>

      <div class="header-center">
        {!hideNavigation && <Navigation className="desktop-nav" />}
      </div>

      <div class="header-right">
        <LanguageSelector class="language-select" />
        {
          !hideNavigation && (
            <button
              class="mobile-menu-toggle"
              id="mobileMenuToggle"
              aria-label="Toggle mobile menu"
            >
              <Menu size={20} class="menu-icon" />
              <X size={20} class="close-icon" />
            </button>
          )
        }
      </div>
    </div>
  </div>
</header>

{
  !hideNavigation && (
    <div class="mobile-menu" id="mobileMenu">
      <div class="container">
        <div class="mobile-menu-content">
          <Navigation className="mobile" />
        </div>
      </div>
    </div>
  )
}

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const mobileMenuToggle = document.getElementById('mobileMenuToggle');
    const mobileMenu = document.getElementById('mobileMenu');

    // Toggle mobile menu
    if (mobileMenuToggle && mobileMenu) {
      mobileMenuToggle.addEventListener('click', () => {
        mobileMenu.classList.toggle('active');
        mobileMenuToggle.classList.toggle('active');
      });
    }

    // Navigation links don't close the mobile menu anymore
    // Mobile menu only closes when X button is clicked

    // Navigation component handles its own click events

    // Set header height and mobile menu offset
    const header = document.querySelector('.header') as HTMLElement;

    if (header) {
      const setHeaderHeight = () => {
        const height = header.offsetHeight;
        document.documentElement.style.setProperty(
          '--header-height',
          `${height}px`
        );
      };

      const updateScrollOffset = () => {
        let totalOffset = header.offsetHeight;

        // Add mobile menu height if it's open
        if (mobileMenu && mobileMenu.classList.contains('active')) {
          totalOffset += mobileMenu.offsetHeight;
        }

        // Set the scroll offset for smooth scrolling
        document.documentElement.style.setProperty(
          '--scroll-offset',
          `${totalOffset}px`
        );
      };

      setHeaderHeight();
      updateScrollOffset();

      // Update on resize
      window.addEventListener('resize', () => {
        setHeaderHeight();
        updateScrollOffset();
      });

      // Update scroll offset when mobile menu toggles
      if (mobileMenuToggle && mobileMenu) {
        const originalToggleClick = mobileMenuToggle.onclick;
        mobileMenuToggle.addEventListener('click', () => {
          // Wait for the toggle to complete, then update offset
          setTimeout(updateScrollOffset, 50);
        });
      }
    }
  });
</script>

<style>
  /* ===== HEADER ===== */
  .header {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    z-index: 1001;
    background: rgba(255, 255, 255, 0.98);
    border-bottom: 1px solid rgba(139, 115, 85, 0.1);
  }

  .header-content {
    display: grid;
    grid-template-columns: 1fr auto 1fr;
    align-items: center;
    padding: var(--space) 0;
    gap: var(--space-xl);
  }

  .header-left {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    justify-self: start;
  }

  .header-center {
    display: flex;
    align-items: center;
    justify-content: center;
    justify-self: center;
  }

  .header-right {
    display: flex;
    align-items: center;
    gap: var(--space-sm);
    justify-self: end;
  }

  .logo a {
    font-family: var(--font-primary);
    font-size: 1.5rem;
    font-weight: 600;
    color: var(--color-text);
    text-decoration: none;
    letter-spacing: -0.02em;
    transition: var(--transition);
  }

  /* Language selector styling */
  .language-select {
    background: rgba(255, 255, 255, 0.9);
    border: 1px solid rgba(139, 115, 85, 0.1);
    border-radius: var(--radius-sm);
    padding: var(--space-sm);
    cursor: pointer;
    transition: var(--transition);
    color: var(--color-text);
    min-width: fit-content;
  }

  /* Mobile menu toggle */
  .mobile-menu-toggle {
    display: none;
    background: rgba(255, 255, 255, 0.9);
    border: 1px solid rgba(139, 115, 85, 0.1);
    border-radius: var(--radius-sm);
    padding: var(--space-sm);
    cursor: pointer;
    transition: var(--transition);
    position: relative;
  }

  .mobile-menu-toggle:hover {
    background: rgba(255, 255, 255, 0.2);
    transform: translateY(-1px);
  }

  .mobile-menu-toggle .menu-icon,
  .mobile-menu-toggle .close-icon {
    color: var(--color-text);
    transition: var(--transition);
  }

  .mobile-menu-toggle.active .menu-icon {
    opacity: 0;
    visibility: hidden;
  }

  .mobile-menu-toggle.active .close-icon {
    opacity: 1;
    visibility: visible;
  }

  .mobile-menu-toggle .close-icon {
    opacity: 0;
    visibility: hidden;
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  /* Mobile menu */
  .mobile-menu {
    position: fixed;
    top: var(--header-height);
    left: 0;
    right: 0;
    background: rgba(255, 255, 255, 0.98);
    border-top: 1px solid rgba(139, 115, 85, 0.1);
    padding: var(--space);
    transform: translateY(-100%);
    opacity: 0;
    visibility: hidden;
    transition: var(--transition);
    z-index: 999;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    overflow-y: auto;
    display: flex;
    flex-direction: column;
  }

  .mobile-menu.active {
    transform: translateY(0);
    opacity: 1;
    visibility: visible;
  }

  .mobile-menu-content {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 100%;
    flex: 1;
    min-height: 0;
  }

  /* Mobile navigation styling handled by Navigation component */

  /* ===== RESPONSIVE DESIGN ===== */

  /* Hide mobile menu container on wide screens */
  @media (min-width: 1025px) {
    .mobile-menu { display: none !important; }
  }

  /* Show mobile elements and hide desktop nav on narrow screens (1024px and down) */
  @media (max-width: 1024px) {
    .header-content {
      grid-template-columns: 1fr auto;
      gap: var(--space);
    }
    .header-center {
      display: none !important;
    }
    .mobile-menu-toggle {
      display: flex !important;
    }
    .logo a {
      font-size: 1.3rem;
    }
  }

  @media (max-width: 768px) {
    .mobile-menu {
      top: 70px;
      max-height: calc(100vh - 70px);
      padding: var(--space-sm);
    }

    .mobile-menu-content {
      padding: var(--space-sm) 0;
    }

    .mobile-menu .nav-link {
      padding: var(--space-sm) var(--space-sm);
      font-size: 0.9rem;
    }
  }
</style>
