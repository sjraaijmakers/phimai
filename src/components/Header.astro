---
import Navigation from './Navigation.astro';
import ScrollToTop from './ScrollToTop.astro';
import { Menu, X } from 'lucide-astro';
---

<header class="header">
  <div class="container">
    <div class="header-content">
      <div class="logo-section">
        <div class="logo">
          <a href="#top" class="logo-link" data-i18n="header.logo" />
        </div>
        <ScrollToTop id="headerScrollToTop" className="header-style" />
      </div>
      
      <Navigation className="desktop-nav nav-links" />
      
      <div class="header-actions">
        <button class="mobile-menu-toggle" id="mobileMenuToggle" aria-label="Toggle mobile menu" onclick="toggleMobileMenu()">
          <Menu size={20} class="menu-icon" />
          <X size={20} class="close-icon" />
        </button>
      </div>
    </div>
  </div>
  
  <div class="mobile-menu" id="mobileMenu" onclick="onMobileMenuClick(event)">
    <div class="mobile-menu-content">
      <Navigation className="mobile nav-links" />
    </div>
  </div>
</header>

<script>
  // Header functionality
  // Expose simple reusable handlers for inline HTML events
  window.toggleMobileMenu = function() {
    const menu = document.getElementById('mobileMenu');
    const toggle = document.getElementById('mobileMenuToggle');
    if (menu) menu.classList.toggle('active');
    if (toggle) toggle.classList.toggle('active');
  };

  window.onMobileMenuClick = function(event) {
    const target = event && event.target;
    if (target && target.closest && target.closest('a')) {
      const menu = document.getElementById('mobileMenu');
      const toggle = document.getElementById('mobileMenuToggle');
      if (menu) menu.classList.remove('active');
      if (toggle) toggle.classList.remove('active');
    }
  };

  document.addEventListener('DOMContentLoaded', () => {
    const headerScrollToTop = document.getElementById('headerScrollToTop');

    // Keep header styling consistent (handled via CSS)

    // Dynamically set --header-height so hero and mobile menu offset correctly
    const header = document.querySelector('.header') as HTMLElement | null;
    const setHeaderHeight = () => {
      if (!header) return;
      const height = header.offsetHeight;
      document.documentElement.style.setProperty('--header-height', `${height}px`);
    };
    setHeaderHeight();
    window.addEventListener('resize', setHeaderHeight);

    // Active nav handled in Navigation.astro
  });
</script>