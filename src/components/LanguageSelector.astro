---
import { languages, defaultLang } from '../i18n/ui';
---

<div class="language-selector">
  <label for="language-select">Language</label>
  <select id="language-select" class="language-select">
    {Object.entries(languages).map(([code, name]) => (
      <option value={code} selected={code === defaultLang}>
        {name}
      </option>
    ))}
  </select>
</div>

<script>
  import { setLanguage, getCurrentLanguage } from '../i18n/client';

  // Language switching
  document.addEventListener('DOMContentLoaded', () => {
    const languageSelect = document.getElementById('language-select') as HTMLSelectElement;

    if (!languageSelect) return;

    // Set initial language from localStorage
    const currentLang = getCurrentLanguage();
    languageSelect.value = currentLang;

    // Handle language change
    languageSelect.addEventListener('change', (e) => {
      const selectedLang = (e.target as HTMLSelectElement).value;
      setLanguage(selectedLang);
    });
  });
</script>

<style>
  .language-selector {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .language-selector label {
    font-size: 0.875rem;
    color: #6B6B6B;
    font-family: 'Inter', sans-serif;
    font-weight: 400;
  }

  .language-select {
    background: var(--glass-bg);
    border: 1px solid var(--glass-border);
    border-radius: var(--border-radius-sm);
    padding: 0.5rem 0.75rem;
    font-size: 0.875rem;
    color: #3A3A3A;
    font-family: 'Inter', sans-serif;
    cursor: pointer;
    backdrop-filter: blur(10px);
    transition: all 0.3s ease;
  }

  .language-select:hover {
    border-color: #8B7355;
    box-shadow: var(--shadow-sm);
  }

  .language-select:focus {
    outline: none;
    border-color: #4ECDC4;
    box-shadow: 0 0 0 2px rgba(78, 205, 196, 0.2);
  }

  .language-select option {
    background: white;
    color: #3A3A3A;
  }

  @media (max-width: 768px) {
    .language-selector {
      justify-content: center;
    }
  }
</style>
