---
import { siteConfig } from '../config/site';
import { Mail, Phone } from 'lucide-astro';
---

<section id="contact" class="contact section">
  <div class="container">
    <div class="contact-content">
      <div class="contact-info">
        <h2 data-i18n="contact.title" />
        <p data-i18n="contact.subtitle" />

        <div class="contact-methods">
          <div class="contact-method">
            <div class="contact-icon">
              <Mail size={24} />
            </div>
            <div class="contact-details">
              <h4 data-i18n="contact.email.label" />
              <a href={`mailto:${siteConfig.email}`}>{siteConfig.email}</a>
            </div>
          </div>

          <div class="contact-method">
            <div class="contact-icon">
              <Phone size={24} />
            </div>
            <div class="contact-details">
              <h4 data-i18n="contact.phone.label" />
              <a href={`tel:${siteConfig.phone}`}>{siteConfig.phone}</a>
            </div>
          </div>

        </div>
      </div>

      <div class="contact-form-container">
        <form class="contact-form" id="contactForm" novalidate>
          <h3 data-i18n="contact.form.title" />
          
          <div class="form-group">
            <label for="email" data-i18n="contact.form.email.label" />
            <input type="email" id="email" name="email" data-i18n-placeholder="contact.form.email.placeholder" required>
          </div>

          <div class="form-group">
            <label for="message" data-i18n="contact.form.message.label" />
            <textarea id="message" name="message" rows="5" minlength="10" maxlength="1000" data-i18n-placeholder="contact.form.message.placeholder" required style="resize: vertical;" />
          </div>

          <!-- Honeypot field -->
          <input type="text" name="company" id="company" style="display:none" tabindex="-1" autocomplete="off">

          <button type="submit" class="btn btn-primary" data-i18n="contact.form.submit" />
        </form>
      </div>
    </div>
  </div>
</section>

<script>
  // Contact form handling
  document.addEventListener('DOMContentLoaded', () => {
    const contactForm = document.getElementById('contactForm');
    const endpoint = "${siteConfig.contactEndpoint}";

    if (!contactForm) return;

    contactForm.addEventListener('submit', async (e) => {
      e.preventDefault();

      const form = e.currentTarget;
      const email = (document.getElementById('email') as HTMLInputElement)?.value.trim();
      const message = (document.getElementById('message') as HTMLTextAreaElement)?.value.trim();
      const company = (document.getElementById('company') as HTMLInputElement)?.value.trim();

      if (company) return; // bot detected

      if (!email || !message) {
        alert('Please fill in your email and message.');
        return;
      }

      if (!endpoint) {
        alert('Contact form endpoint is not configured. Please set siteConfig.contactEndpoint.');
        return;
      }

      try {
        const res = await fetch(endpoint, {
          method: 'POST',
          headers: { 'Content-Type': 'application/json' },
          body: JSON.stringify({ email, message, source: window.location.href })
        });

        if (!res.ok) throw new Error('Network response was not ok');
        alert('Thanks! Your message has been sent.');
        (form as HTMLFormElement).reset();
      } catch (err) {
        console.error(err);
        alert('Sorry, something went wrong. Please email us directly at ${siteConfig.email}.');
      }
    });
  });
</script>

